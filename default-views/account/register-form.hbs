{{#if error}}
    <!--  server-side error  -->
    <div class="row">
        <div class="col s12">
            <p class="text-danger"><strong>{{error}}</strong></p>
        </div>
    </div>
{{/if}}

<div class="row">
    <div class="col s12 red lighten-4 hide" id="errorMessage"></div>
</div>

<div class="row">
    <div class="input-field col s6">
        <i class="material-icons prefix">email</i>
        <label for="email">Recovery Email:</label>
        <input type="email" name="email" id="email" placeholder="Email" />
    </div>
    <div class="input-field col s6">
        <p>Your email will only used for account recovery and other
            administrative emails.</p>
    </div>
</div>

<div class="row">
    <div class="input-field col s6">
        <i class="material-icons prefix">account_circle</i>
        <label for="username">Display Username:</label>
        <input placeholder="Username" id="username" name="username" type="text">
    </div>
    <div class="input-field col s6">
        <p>Something to display in the nav bar, to indicate you're logged in.</p>
    </div>
</div>

<div class="row">
    <div class="input-field col s6">
        <i class="material-icons prefix">vpn_key</i>
        <label for="password">Password:</label>
        <input id="password" name="password" type="password">
    </div>
</div>

<input type="hidden" id="returnToUrl" value="{{returnToUrl}}" />

<div class="row">
    <div class="col s6 valign-wrapper">
        <button type="button" class="waves-effect waves-light btn-large green darken-3" id="registerBtn">
            Register
            <i class="material-icons right">send</i>
        </button>

        <div class="loadingio-spinner-gear-kznxtisnhx hide" id="spinner"><div class="ldio-ny0qf724px9">
            <div><div></div><div></div><div></div><div></div><div></div><div></div></div>
        </div></div>
    </div>

    <div class="col s6" id="loginSection">
        <h5>Already have an account?</h5>
        <a class="waves-effect waves-light btn-small green"
           href="{{{loginUrl}}}">
            Log In
        </a>
    </div>
</div>

<script>
  function resetRegisterButton () {
    document.getElementById('registerBtn').disabled = ''
    document.getElementById('spinner').classList.add('hide')
    document.getElementById('loginSection').classList.remove('hide')
  }

  async function submitRegisterForm () {
    document.getElementById('registerBtn').disabled = 'disabled'
    document.getElementById('spinner').classList.remove('hide')
    document.getElementById('loginSection').classList.add('hide')
    document.getElementById('errorMessage').classList.add('hide')

    console.log('submitRegisterForm triggered.')

    const userData = {}
    for (const field of ['email', 'username', 'password', 'returnToUrl']) {
      userData[field] = document.getElementById(field).value
    }

    try {
      const response = await fetch('/api/accounts/new', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(userData)
      })

      if (!response.ok) {
        const error = new Error('Registration error.')
        error.cause = await response.json()
        throw error
      }

      const responseData = await response.json()
      console.log('Register response:', responseData)

      window.location.href = responseData.redirect || '/'
    } catch (e) {
      resetRegisterButton()
      const cause = e.cause || {}
      let errorMessage = cause.message || e.message
      if (errorMessage === 'Failed to fetch') {
        errorMessage = 'Could not reach the server.'
      }
      document.getElementById('errorMessage').innerHTML = errorMessage
      document.getElementById('errorMessage').classList.remove('hide')
      console.error(e)
    }

  }

  onDocumentReady(() => { // from /common/js/ready.js
    document.getElementById('registerBtn')
      .addEventListener('click', submitRegisterForm)
  })
</script>


